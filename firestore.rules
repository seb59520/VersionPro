rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isUserAdmin() {
      return isAuthenticated() && getUserData().role == 'admin';
    }

    function belongsToOrganization(orgId) {
      return isAuthenticated() && getUserData().organizationId == orgId;
    }

    // Organizations collection
    match /organizations/{organizationId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(organizationId) || isUserAdmin()
      );
      allow delete: if false;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == userId || isUserAdmin()
      );
      allow delete: if false;
    }

    // Stands collection
    match /stands/{standId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(resource.data.organizationId) || isUserAdmin()
      );
      allow delete: if isAuthenticated() && isUserAdmin();
    }

    // Posters collection
    match /posters/{posterId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(resource.data.organizationId) || isUserAdmin()
      );
      allow delete: if isAuthenticated() && isUserAdmin();
    }

    // Publications collection
    match /publications/{publicationId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(resource.data.organizationId) || isUserAdmin()
      );
      allow delete: if isAuthenticated() && isUserAdmin();
    }

    // Publication associations collection
    match /publicationAssociations/{associationId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(resource.data.organizationId) || isUserAdmin()
      );
      allow delete: if isAuthenticated() && isUserAdmin();
    }

    // Maintenance collection
    match /maintenance/{maintenanceId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        belongsToOrganization(resource.data.organizationId) || isUserAdmin()
      );
      allow delete: if isAuthenticated() && isUserAdmin();
    }

    // Storage rules
    match /storage/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
  }
}